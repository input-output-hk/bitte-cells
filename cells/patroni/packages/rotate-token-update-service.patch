diff --git i/patroni/dcs/consul.py w/patroni/dcs/consul.py
index 10886c6..e613292 100644
--- i/patroni/dcs/consul.py
+++ w/patroni/dcs/consul.py
@@ -236,6 +236,8 @@ class Consul(AbstractDCS):
         self._service_check_tls_server_name = config.get('service_check_tls_server_name', None)
         if not self._ctl:
             self.create_session()
+        self._token = kwargs.get('token')
+        self._previous_loop_token = self._token
 
     def retry(self, *args, **kwargs):
         return self._retry.copy()(*args, **kwargs)
@@ -255,6 +257,7 @@ class Consul(AbstractDCS):
         self._client.reload_config(consul_config)
         self._previous_loop_service_tags = self._service_tags
         self._service_tags = sorted(consul_config.get('service_tags', []))
+        self._token = consul_config.get('token')
 
         should_register_service = consul_config.get('register_service', False)
         if should_register_service and not self._register_service:
@@ -440,7 +443,7 @@ class Consul(AbstractDCS):
 
     @catch_consul_errors
     def register_service(self, service_name, **kwargs):
-        logger.info('Register service %s, params %s', service_name, kwargs)
+        logger.info('Register service %s, params %s', service_name, [v for k, v in kwargs.items() if k != "token"])
         return self._client.agent.service.register(service_name, **kwargs)
 
     @catch_consul_errors
@@ -464,6 +467,7 @@ class Consul(AbstractDCS):
         tags = self._service_tags[:]
         tags.append(role)
         self._previous_loop_service_tags = self._service_tags
+        self._previous_loop_token = self._token
 
         params = {
             'service_id': '{0}/{1}'.format(self._scope, self._name),
@@ -472,6 +476,7 @@ class Consul(AbstractDCS):
             'check': check,
             'tags': tags,
             'enable_tag_override': True,
+            'token': self._token,
         }
 
         if state == 'stopped' or (not self._register_service and self._previous_loop_register_service):
@@ -500,6 +505,7 @@ class Consul(AbstractDCS):
         if (
             force or update or self._register_service != self._previous_loop_register_service
             or self._service_tags != self._previous_loop_service_tags
+            or self._token != self._previous_loop_token
         ):
             return self._update_service(new_data)
 
