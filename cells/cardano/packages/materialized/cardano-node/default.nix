{
  pkgs = hackage:
    {
      packages = {
        "partial-order".revision = (((hackage."partial-order")."0.2.0.0").revisions).default;
        "partial-order".flags.extra-instances = true;
        "snap-blaze".revision = (((hackage."snap-blaze")."0.2.1.5").revisions).default;
        "charset".revision = (((hackage."charset")."0.3.9").revisions).default;
        "insert-ordered-containers".revision = (((hackage."insert-ordered-containers")."0.2.5.1").revisions).default;
        "size-based".revision = (((hackage."size-based")."0.1.2.0").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.cli = false;
        "wcwidth".flags.split-base = true;
        "time-manager".revision = (((hackage."time-manager")."0.0.0").revisions).default;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "ghc-boot".revision = (((hackage."ghc-boot")."8.10.5").revisions).default;
        "tasty-hedgehog".revision = (((hackage."tasty-hedgehog")."1.1.0.0").revisions).default;
        "x509-validation".revision = (((hackage."x509-validation")."1.6.11").revisions).default;
        "typerep-map".revision = (((hackage."typerep-map")."0.4.0.0").revisions).default;
        "openapi3".revision = (((hackage."openapi3")."3.1.0").revisions).default;
        "http-api-data".revision = (((hackage."http-api-data")."0.4.3").revisions).default;
        "http-api-data".flags.use-text-show = false;
        "http-media".revision = (((hackage."http-media")."0.8.0.0").revisions).default;
        "tf-random".revision = (((hackage."tf-random")."0.5").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.1.5").revisions).default;
        "natural-transformation".revision = (((hackage."natural-transformation")."0.4").revisions).default;
        "dependent-map".revision = (((hackage."dependent-map")."0.4.0.0").revisions).default;
        "generics-sop".revision = (((hackage."generics-sop")."0.5.1.1").revisions).default;
        "abstract-deque".revision = (((hackage."abstract-deque")."0.3").revisions).default;
        "abstract-deque".flags.usecas = false;
        "streaming".revision = (((hackage."streaming")."0.2.3.0").revisions).default;
        "old-time".revision = (((hackage."old-time")."1.1.0.3").revisions).default;
        "byteorder".revision = (((hackage."byteorder")."1.0.4").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."8.10.5").revisions).default;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.6.1").revisions).default;
        "cborg".revision = (((hackage."cborg")."0.2.6.0").revisions).default;
        "cborg".flags.optimize-gmp = true;
        "regex-posix".revision = (((hackage."regex-posix")."0.96.0.1").revisions).default;
        "regex-posix".flags._regex-posix-clib = false;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "systemd".revision = (((hackage."systemd")."2.3.0").revisions).default;
        "streaming-commons".revision = (((hackage."streaming-commons")."0.2.2.3").revisions).default;
        "streaming-commons".flags.use-bytestring-builder = false;
        "lazy-search".revision = (((hackage."lazy-search")."0.1.2.1").revisions).default;
        "servant".revision = (((hackage."servant")."0.18.3").revisions).default;
        "asn1-encoding".revision = (((hackage."asn1-encoding")."0.9.6").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "libsystemd-journal".revision = (((hackage."libsystemd-journal")."1.4.5").revisions).default;
        "polyparse".revision = (((hackage."polyparse")."1.13").revisions).default;
        "haskell-src-exts".revision = (((hackage."haskell-src-exts")."1.23.1").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.2").revisions).default;
        "hedgehog-quickcheck".revision = (((hackage."hedgehog-quickcheck")."0.1.1").revisions).default;
        "text-short".revision = (((hackage."text-short")."0.1.4").revisions).default;
        "text-short".flags.asserts = false;
        "bin".revision = (((hackage."bin")."0.1").revisions).default;
        "cassava".revision = (((hackage."cassava")."0.5.2.0").revisions).default;
        "cassava".flags.bytestring--lt-0_10_4 = false;
        "psqueues".revision = (((hackage."psqueues")."0.2.7.3").revisions).default;
        "Diff".revision = (((hackage."Diff")."0.4.0").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "vector-binary-instances".revision = (((hackage."vector-binary-instances")."0.2.5.2").revisions).default;
        "uuid".revision = (((hackage."uuid")."1.3.15").revisions).default;
        "formatting".revision = (((hackage."formatting")."6.3.7").revisions).default;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "show-combinators".revision = (((hackage."show-combinators")."0.2.0.0").revisions).default;
        "lifted-async".revision = (((hackage."lifted-async")."0.10.2.2").revisions).default;
        "async".revision = (((hackage."async")."2.2.4").revisions).default;
        "async".flags.bench = false;
        "text".revision = (((hackage."text")."1.2.4.1").revisions).default;
        "base".revision = (((hackage."base")."4.14.2.0").revisions).default;
        "microlens-mtl".revision = (((hackage."microlens-mtl")."0.2.0.1").revisions).default;
        "word8".revision = (((hackage."word8")."0.1.3").revisions).default;
        "hourglass".revision = (((hackage."hourglass")."0.2.12").revisions).default;
        "reducers".revision = (((hackage."reducers")."3.12.4").revisions).default;
        "time".revision = (((hackage."time")."1.9.3").revisions).default;
        "bsb-http-chunked".revision = (((hackage."bsb-http-chunked")."0.0.0.4").revisions).default;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.11").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.3").revisions).default;
        "ListLike".revision = (((hackage."ListLike")."4.7.6").revisions).default;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.9").revisions).default;
        "parsers".revision = (((hackage."parsers")."0.12.10").revisions).default;
        "parsers".flags.binary = true;
        "parsers".flags.parsec = true;
        "parsers".flags.attoparsec = true;
        "network-info".revision = (((hackage."network-info")."0.2.0.10").revisions).default;
        "base58-bytestring".revision = (((hackage."base58-bytestring")."0.1.0").revisions).default;
        "random".revision = (((hackage."random")."1.2.1").revisions).default;
        "unix-time".revision = (((hackage."unix-time")."0.4.7").revisions).default;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.16.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "groups".revision = (((hackage."groups")."0.5.3").revisions).default;
        "math-functions".revision = (((hackage."math-functions")."0.3.4.2").revisions).default;
        "math-functions".flags.system-expm1 = true;
        "math-functions".flags.system-erf = true;
        "entropy".revision = (((hackage."entropy")."0.4.1.7").revisions).default;
        "entropy".flags.halvm = false;
        "Stream".revision = (((hackage."Stream")."0.4.7.2").revisions).default;
        "system-filepath".revision = (((hackage."system-filepath")."0.4.14").revisions).default;
        "wai".revision = (((hackage."wai")."3.2.3").revisions).default;
        "ral".revision = (((hackage."ral")."0.1").revisions).default;
        "ral".flags.distributive = true;
        "ral".flags.adjunctions = true;
        "ral".flags.semigroupoids = true;
        "easy-file".revision = (((hackage."easy-file")."0.2.2").revisions).default;
        "th-orphans".revision = (((hackage."th-orphans")."0.13.12").revisions).default;
        "streaming-binary".revision = (((hackage."streaming-binary")."0.2.2.0").revisions).default;
        "megaparsec".revision = (((hackage."megaparsec")."9.2.0").revisions).default;
        "megaparsec".flags.dev = false;
        "vector-th-unbox".revision = (((hackage."vector-th-unbox")."0.2.2").revisions).default;
        "async-extras".revision = (((hackage."async-extras")."0.1.3.2").revisions).default;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "base64-bytestring".revision = (((hackage."base64-bytestring")."1.2.1.0").revisions).default;
        "cereal".revision = (((hackage."cereal")."0.5.8.2").revisions).default;
        "cereal".flags.bytestring-builder = false;
        "cookie".revision = (((hackage."cookie")."0.4.5").revisions).default;
        "utf8-string".revision = (((hackage."utf8-string")."1.0.2").revisions).default;
        "process".revision = (((hackage."process")."1.6.9.0").revisions).default;
        "random-shuffle".revision = (((hackage."random-shuffle")."0.0.4").revisions).default;
        "unagi-chan".revision = (((hackage."unagi-chan")."0.4.1.4").revisions).default;
        "unagi-chan".flags.compare-benchmarks = false;
        "servant-server".revision = (((hackage."servant-server")."0.18.3").revisions).default;
        "parser-combinators".revision = (((hackage."parser-combinators")."1.3.0").revisions).default;
        "parser-combinators".flags.dev = false;
        "microstache".revision = (((hackage."microstache")."1.0.2").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.6").revisions).default;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.comonad = true;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.3.0").revisions).default;
        "data-default-instances-containers".revision = (((hackage."data-default-instances-containers")."0.0.1").revisions).default;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.2.0").revisions).default;
        "regex-base".revision = (((hackage."regex-base")."0.94.0.2").revisions).default;
        "MonadRandom".revision = (((hackage."MonadRandom")."0.5.3").revisions).default;
        "conduit".revision = (((hackage."conduit")."1.3.4.2").revisions).default;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.6").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "vector".revision = (((hackage."vector")."0.12.3.1").revisions).default;
        "vector".flags.unsafechecks = false;
        "vector".flags.internalchecks = false;
        "vector".flags.wall = false;
        "vector".flags.boundschecks = true;
        "statistics".revision = (((hackage."statistics")."0.15.2.0").revisions).default;
        "network".revision = (((hackage."network")."3.1.2.5").revisions).default;
        "network".flags.devel = false;
        "invariant".revision = (((hackage."invariant")."0.5.5").revisions).default;
        "hedgehog-corpus".revision = (((hackage."hedgehog-corpus")."0.2.0").revisions).default;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.8").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "asn1-parse".revision = (((hackage."asn1-parse")."0.9.5").revisions).default;
        "cryptonite".revision = (((hackage."cryptonite")."0.27").revisions).default;
        "cryptonite".flags.check_alignment = false;
        "cryptonite".flags.support_sse = false;
        "cryptonite".flags.old_toolchain_inliner = false;
        "cryptonite".flags.integer-gmp = true;
        "cryptonite".flags.use_target_attributes = true;
        "cryptonite".flags.support_deepseq = true;
        "cryptonite".flags.support_pclmuldq = false;
        "cryptonite".flags.support_aesni = true;
        "cryptonite".flags.support_rdrand = false;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.bench = true;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.properties = true;
        "vector-algorithms".flags.boundschecks = true;
        "monad-par-extras".revision = (((hackage."monad-par-extras")."0.3.3").revisions).default;
        "socks".revision = (((hackage."socks")."0.6.1").revisions).default;
        "generic-monoid".revision = (((hackage."generic-monoid")."0.1.0.1").revisions).default;
        "wai-logger".revision = (((hackage."wai-logger")."2.3.6").revisions).default;
        "erf".revision = (((hackage."erf")."2.0.0.0").revisions).default;
        "lens".revision = (((hackage."lens")."5.0.1").revisions).default;
        "lens".flags.j = false;
        "lens".flags.test-templates = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.trustworthy = true;
        "lens".flags.test-hunit = true;
        "lens".flags.dump-splices = false;
        "lens".flags.inlining = true;
        "lens".flags.test-properties = true;
        "x509".revision = (((hackage."x509")."1.7.5").revisions).default;
        "quickcheck-instances".revision = (((hackage."quickcheck-instances")."0.3.27").revisions).default;
        "quickcheck-instances".flags.bytestring-builder = false;
        "optics-th".revision = (((hackage."optics-th")."0.4").revisions).default;
        "generic-data".revision = (((hackage."generic-data")."0.9.2.1").revisions).default;
        "hsyslog".revision = (((hackage."hsyslog")."5.0.2").revisions).default;
        "hsyslog".flags.install-examples = false;
        "profunctors".revision = (((hackage."profunctors")."5.6.2").revisions).default;
        "dependent-sum-template".revision = (((hackage."dependent-sum-template")."0.1.1.1").revisions).default;
        "katip".revision = (((hackage."katip")."0.8.7.0").revisions).default;
        "katip".flags.lib-werror = false;
        "bimap".revision = (((hackage."bimap")."0.4.0").revisions).default;
        "http-types".revision = (((hackage."http-types")."0.12.3").revisions).default;
        "some".revision = (((hackage."some")."1.0.2").revisions).default;
        "some".flags.newtype-unsafe = true;
        "js-chart".revision = (((hackage."js-chart")."2.9.4.1").revisions).default;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.distributive = true;
        "comonad".flags.containers = true;
        "comonad".flags.indexed-traversable = true;
        "logict".revision = (((hackage."logict")."0.7.0.3").revisions).default;
        "mersenne-random-pure64".revision = (((hackage."mersenne-random-pure64")."0.2.2.0").revisions).default;
        "mersenne-random-pure64".flags.small_base = false;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "ekg".revision = (((hackage."ekg")."0.4.0.15").revisions).default;
        "atomic-primops".revision = (((hackage."atomic-primops")."0.8.4").revisions).default;
        "atomic-primops".flags.debug = false;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "split".revision = (((hackage."split")."0.2.3.4").revisions).default;
        "strict-list".revision = (((hackage."strict-list")."0.1.6").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6.1").revisions).default;
        "time-compat".flags.old-locale = false;
        "string-conv".revision = (((hackage."string-conv")."0.1.2").revisions).default;
        "string-conv".flags.lib-werror = false;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "hspec-core".revision = (((hackage."hspec-core")."2.9.3").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.5").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "wl-pprint-text".revision = (((hackage."wl-pprint-text")."1.2.0.1").revisions).default;
        "x509-system".revision = (((hackage."x509-system")."1.6.6").revisions).default;
        "generic-random".revision = (((hackage."generic-random")."1.5.0.1").revisions).default;
        "generic-random".flags.enable-inspect = false;
        "protolude".revision = (((hackage."protolude")."0.3.0").revisions).default;
        "protolude".flags.dev = false;
        "foundation".revision = (((hackage."foundation")."0.0.26.1").revisions).default;
        "foundation".flags.doctest = false;
        "foundation".flags.minimal-deps = false;
        "foundation".flags.linktest = false;
        "foundation".flags.bounds-check = false;
        "foundation".flags.bench-all = false;
        "foundation".flags.experimental = false;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.6").revisions).default;
        "appar".revision = (((hackage."appar")."0.1.8").revisions).default;
        "lazysmallcheck".revision = (((hackage."lazysmallcheck")."0.6").revisions).default;
        "tree-diff".revision = (((hackage."tree-diff")."0.2.1").revisions).default;
        "extra".revision = (((hackage."extra")."1.7.10").revisions).default;
        "ghc".revision = (((hackage."ghc")."8.10.5").revisions).default;
        "snap-server".revision = (((hackage."snap-server")."1.1.2.0").revisions).default;
        "snap-server".flags.portable = false;
        "snap-server".flags.build-pong = false;
        "snap-server".flags.build-testserver = false;
        "snap-server".flags.openssl = false;
        "snap-server".flags.debug = false;
        "either".revision = (((hackage."either")."5.0.1.1").revisions).default;
        "setenv".revision = (((hackage."setenv")."0.1.1.3").revisions).default;
        "yaml".revision = (((hackage."yaml")."0.11.7.0").revisions).default;
        "yaml".flags.no-examples = true;
        "yaml".flags.no-exe = true;
        "asn1-types".revision = (((hackage."asn1-types")."0.3.4").revisions).default;
        "bytestring-builder".revision = (((hackage."bytestring-builder")."0.10.8.2.0").revisions).default;
        "bytestring-builder".flags.bytestring_has_builder = true;
        "zlib-bindings".revision = (((hackage."zlib-bindings")."0.1.1.5").revisions).default;
        "base-compat".revision = (((hackage."base-compat")."0.11.2").revisions).default;
        "tasty-quickcheck".revision = (((hackage."tasty-quickcheck")."0.10.2").revisions).default;
        "http2".revision = (((hackage."http2")."3.0.2").revisions).default;
        "http2".flags.devel = false;
        "http2".flags.h2spec = false;
        "http2".flags.doc = false;
        "string-conversions".revision = (((hackage."string-conversions")."0.4.0.1").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.11.2").revisions).default;
        "deriving-aeson".revision = (((hackage."deriving-aeson")."0.2.8").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "websockets-snap".revision = (((hackage."websockets-snap")."0.10.3.1").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "th-lift-instances".revision = (((hackage."th-lift-instances")."0.1.18").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.2.1.0").revisions).default;
        "hspec".revision = (((hackage."hspec")."2.9.3").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.2").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.3.0").revisions).default;
        "base64-bytestring-type".revision = (((hackage."base64-bytestring-type")."1.0.1").revisions).default;
        "base64-bytestring-type".flags.http-api-data = true;
        "base64-bytestring-type".flags.cereal = true;
        "base64-bytestring-type".flags.serialise = true;
        "tls".revision = (((hackage."tls")."1.5.5").revisions).default;
        "tls".flags.network = true;
        "tls".flags.hans = false;
        "tls".flags.compat = true;
        "mtl-compat".revision = (((hackage."mtl-compat")."0.2.2").revisions).default;
        "mtl-compat".flags.two-point-one = false;
        "mtl-compat".flags.two-point-two = false;
        "concurrent-output".revision = (((hackage."concurrent-output")."1.10.14").revisions).default;
        "sop-core".revision = (((hackage."sop-core")."0.5.0.1").revisions).default;
        "abstract-par".revision = (((hackage."abstract-par")."0.3.3").revisions).default;
        "tasty-th".revision = (((hackage."tasty-th")."0.1.7").revisions).default;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "unliftio".revision = (((hackage."unliftio")."0.2.20").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.0").revisions).default;
        "http-client-tls".revision = (((hackage."http-client-tls")."0.3.5.3").revisions).default;
        "clock".revision = (((hackage."clock")."0.8.2").revisions).default;
        "clock".flags.llvm = false;
        "utility-ht".revision = (((hackage."utility-ht")."0.0.16").revisions).default;
        "quickcheck-io".revision = (((hackage."quickcheck-io")."0.2.0").revisions).default;
        "th-expand-syns".revision = (((hackage."th-expand-syns")."0.4.9.0").revisions).default;
        "half".revision = (((hackage."half")."0.3.1").revisions).default;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "ekg-core".revision = (((hackage."ekg-core")."0.1.1.7").revisions).default;
        "constraints".revision = (((hackage."constraints")."0.13.2").revisions).default;
        "basement".revision = (((hackage."basement")."0.0.12").revisions).default;
        "deque".revision = (((hackage."deque")."0.4.4").revisions).default;
        "bech32".revision = (((hackage."bech32")."1.1.2").revisions).default;
        "bech32".flags.static = false;
        "bech32".flags.release = false;
        "data-accessor-transformers".revision = (((hackage."data-accessor-transformers")."0.2.1.7").revisions).default;
        "lifted-base".revision = (((hackage."lifted-base")."0.2.3.12").revisions).default;
        "hostname".revision = (((hackage."hostname")."1.0").revisions).default;
        "prettyprinter".revision = (((hackage."prettyprinter")."1.7.1").revisions).default;
        "prettyprinter".flags.buildreadme = false;
        "prettyprinter".flags.text = true;
        "tasty-expected-failure".revision = (((hackage."tasty-expected-failure")."0.12.3").revisions).default;
        "alex".revision = (((hackage."alex")."3.2.6").revisions).default;
        "alex".flags.small_base = true;
        "serialise".revision = (((hackage."serialise")."0.2.4.0").revisions).default;
        "serialise".flags.newtime15 = true;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "monad-control".revision = (((hackage."monad-control")."1.0.3.1").revisions).default;
        "SafeSemaphore".revision = (((hackage."SafeSemaphore")."0.10.1").revisions).default;
        "constraints-extras".revision = (((hackage."constraints-extras")."0.3.2.0").revisions).default;
        "constraints-extras".flags.build-readme = true;
        "fgl".revision = (((hackage."fgl")."5.7.0.3").revisions).default;
        "fgl".flags.containers042 = true;
        "tasty".revision = (((hackage."tasty")."1.4.2.1").revisions).default;
        "tasty".flags.unix = true;
        "tasty".flags.clock = true;
        "safecopy".revision = (((hackage."safecopy")."0.10.4.2").revisions).default;
        "wai-app-static".revision = (((hackage."wai-app-static")."3.1.7.2").revisions).default;
        "wai-app-static".flags.print = false;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "simple-sendfile".revision = (((hackage."simple-sendfile")."0.2.30").revisions).default;
        "simple-sendfile".flags.allow-bsd = true;
        "rts".revision = (((hackage."rts")."1.0.1").revisions).default;
        "network-byte-order".revision = (((hackage."network-byte-order")."0.1.6").revisions).default;
        "semialign".revision = (((hackage."semialign")."1.1.0.1").revisions).default;
        "semialign".flags.semigroupoids = true;
        "ekg-json".revision = (((hackage."ekg-json")."0.1.0.6").revisions).default;
        "OneTuple".revision = (((hackage."OneTuple")."0.3.1").revisions).default;
        "monad-par".revision = (((hackage."monad-par")."0.3.5").revisions).default;
        "monad-par".flags.chaselev = false;
        "monad-par".flags.newgeneric = false;
        "prometheus".revision = (((hackage."prometheus")."2.2.2").revisions).default;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "mime-types".revision = (((hackage."mime-types")."0.1.0.9").revisions).default;
        "moo".revision = (((hackage."moo")."1.2").revisions).default;
        "mwc-random".revision = (((hackage."mwc-random")."0.15.0.2").revisions).default;
        "blaze-markup".revision = (((hackage."blaze-markup")."0.8.2.8").revisions).default;
        "optics-extra".revision = (((hackage."optics-extra")."0.4").revisions).default;
        "newtype".revision = (((hackage."newtype")."0.2.2.0").revisions).default;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.template-haskell = true;
        "reflection".flags.slow = false;
        "hspec-discover".revision = (((hackage."hspec-discover")."2.9.3").revisions).default;
        "pretty-show".revision = (((hackage."pretty-show")."1.10").revisions).default;
        "template-haskell".revision = (((hackage."template-haskell")."2.16.0.0").revisions).default;
        "tasty-golden".revision = (((hackage."tasty-golden")."2.3.4").revisions).default;
        "tasty-golden".flags.build-example = false;
        "binary-orphans".revision = (((hackage."binary-orphans")."1.0.2").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.10.12.0").revisions).default;
        "freer-simple".revision = (((hackage."freer-simple")."1.2.1.1").revisions).default;
        "Unique".revision = (((hackage."Unique")."0.4.7.9").revisions).default;
        "dom-lt".revision = (((hackage."dom-lt")."0.2.3").revisions).default;
        "aeson-pretty".revision = (((hackage."aeson-pretty")."0.8.9").revisions).default;
        "aeson-pretty".flags.lib-only = false;
        "list-t".revision = (((hackage."list-t")."1.0.5.1").revisions).default;
        "tdigest".revision = (((hackage."tdigest")."0.2.1.1").revisions).default;
        "aeson".revision = (((hackage."aeson")."1.5.6.0").revisions).default;
        "aeson".flags.cffi = false;
        "aeson".flags.fast = false;
        "aeson".flags.bytestring-builder = false;
        "aeson".flags.developer = false;
        "attoparsec-iso8601".revision = (((hackage."attoparsec-iso8601")."1.0.2.0").revisions).default;
        "attoparsec-iso8601".flags.fast = false;
        "attoparsec-iso8601".flags.developer = false;
        "graphviz".revision = (((hackage."graphviz")."2999.20.1.0").revisions).default;
        "graphviz".flags.test-parsing = false;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.3").revisions).default;
        "fingertree".revision = (((hackage."fingertree")."0.1.4.2").revisions).default;
        "ghci".revision = (((hackage."ghci")."8.10.5").revisions).default;
        "th-reify-many".revision = (((hackage."th-reify-many")."0.1.10").revisions).default;
        "witherable".revision = (((hackage."witherable")."0.4.2").revisions).default;
        "snap-core".revision = (((hackage."snap-core")."1.0.4.2").revisions).default;
        "snap-core".flags.portable = false;
        "snap-core".flags.network-uri = true;
        "snap-core".flags.debug = false;
        "pem".revision = (((hackage."pem")."0.2.4").revisions).default;
        "barbies".revision = (((hackage."barbies")."2.0.3.0").revisions).default;
        "syb".revision = (((hackage."syb")."0.7.2.1").revisions).default;
        "zlib".revision = (((hackage."zlib")."0.6.2.3").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.pkg-config = false;
        "zlib".flags.bundled-c-zlib = false;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "tasty-hunit".revision = (((hackage."tasty-hunit")."0.10.0.3").revisions).default;
        "nothunks".revision = (((hackage."nothunks")."0.1.3").revisions).default;
        "nothunks".flags.bytestring = true;
        "nothunks".flags.text = true;
        "nothunks".flags.vector = true;
        "th-compat".revision = (((hackage."th-compat")."0.1.3").revisions).default;
        "data-default-instances-dlist".revision = (((hackage."data-default-instances-dlist")."0.0.1").revisions).default;
        "gnuplot".revision = (((hackage."gnuplot")."0.5.6.1").revisions).default;
        "gnuplot".flags.executeshell = false;
        "gnuplot".flags.buildexamples = false;
        "gnuplot".flags.executepipe = false;
        "dense-linear-algebra".revision = (((hackage."dense-linear-algebra")."0.1.0.0").revisions).default;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "file-embed".revision = (((hackage."file-embed")."0.0.15.0").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.4.0").revisions).default;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.4").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "gray-code".revision = (((hackage."gray-code")."0.3.1").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "attoparsec".revision = (((hackage."attoparsec")."0.13.2.5").revisions).default;
        "attoparsec".flags.developer = false;
        "algebraic-graphs".revision = (((hackage."algebraic-graphs")."0.5").revisions).default;
        "singleton-bool".revision = (((hackage."singleton-bool")."0.1.5").revisions).default;
        "uniplate".revision = (((hackage."uniplate")."1.6.13").revisions).default;
        "blaze-html".revision = (((hackage."blaze-html")."0.9.1.2").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "criterion-measurement".revision = (((hackage."criterion-measurement")."0.1.3.0").revisions).default;
        "criterion-measurement".flags.fast = false;
        "ixset-typed".revision = (((hackage."ixset-typed")."0.5").revisions).default;
        "newtype-generics".revision = (((hackage."newtype-generics")."0.6.1").revisions).default;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11.1").revisions).default;
        "ansi-terminal".flags.example = false;
        "transformers-except".revision = (((hackage."transformers-except")."0.1.2").revisions).default;
        "libyaml".revision = (((hackage."libyaml")."0.1.2").revisions).default;
        "libyaml".flags.no-unicode = false;
        "libyaml".flags.system-libyaml = false;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "dec".revision = (((hackage."dec")."0.0.4").revisions).default;
        "th-lift".revision = (((hackage."th-lift")."0.8.2").revisions).default;
        "th-utilities".revision = (((hackage."th-utilities")."0.2.4.3").revisions).default;
        "dictionary-sharing".revision = (((hackage."dictionary-sharing")."0.1.0.0").revisions).default;
        "hedgehog".revision = (((hackage."hedgehog")."1.0.5").revisions).default;
        "microlens-th".revision = (((hackage."microlens-th")."0.4.3.10").revisions).default;
        "memory".revision = (((hackage."memory")."0.16.0").revisions).default;
        "memory".flags.support_basement = true;
        "memory".flags.support_bytestring = true;
        "memory".flags.support_deepseq = true;
        "memory".flags.support_foundation = true;
        "monoidal-containers".revision = (((hackage."monoidal-containers")."0.6.1.0").revisions).default;
        "monoidal-containers".flags.split-these = true;
        "quiet".revision = (((hackage."quiet")."0.2").revisions).default;
        "data-accessor".revision = (((hackage."data-accessor")."0.2.3").revisions).default;
        "data-accessor".flags.monadfail = true;
        "data-accessor".flags.category = true;
        "data-accessor".flags.splitbase = true;
        "wai-extra".revision = (((hackage."wai-extra")."3.1.7").revisions).default;
        "wai-extra".flags.build-example = false;
        "blaze-builder".revision = (((hackage."blaze-builder")."0.4.2.2").revisions).default;
        "terminal-size".revision = (((hackage."terminal-size")."0.3.2.1").revisions).default;
        "th-extras".revision = (((hackage."th-extras")."0.0.0.5").revisions).default;
        "th-extras".flags.base4 = true;
        "composition-prelude".revision = (((hackage."composition-prelude")."3.0.0.2").revisions).default;
        "composition-prelude".flags.development = false;
        "time-units".revision = (((hackage."time-units")."1.0.0").revisions).default;
        "SHA".revision = (((hackage."SHA")."1.6.4.4").revisions).default;
        "SHA".flags.exe = false;
        "fmlist".revision = (((hackage."fmlist")."0.9.4").revisions).default;
        "stm".revision = (((hackage."stm")."2.5.0.1").revisions).default;
        "Histogram".revision = (((hackage."Histogram")."0.1.0.2").revisions).default;
        "warp".revision = (((hackage."warp")."3.3.18").revisions).default;
        "warp".flags.network-bytestring = false;
        "warp".flags.allow-sendfilefd = true;
        "warp".flags.warp-debug = false;
        "generic-deriving".revision = (((hackage."generic-deriving")."1.14.1").revisions).default;
        "generic-deriving".flags.base-4-9 = true;
        "connection".revision = (((hackage."connection")."0.3.1").revisions).default;
        "criterion".revision = (((hackage."criterion")."1.5.11.0").revisions).default;
        "criterion".flags.embed-data-files = false;
        "criterion".flags.fast = false;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "dns".revision = (((hackage."dns")."3.0.4").revisions).default;
        "fast-logger".revision = (((hackage."fast-logger")."3.0.5").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "fin".revision = (((hackage."fin")."0.1.1").revisions).default;
        "code-page".revision = (((hackage."code-page")."0.2.1").revisions).default;
        "deriving-compat".revision = (((hackage."deriving-compat")."0.6").revisions).default;
        "deriving-compat".flags.new-functor-classes = true;
        "deriving-compat".flags.base-4-9 = true;
        "deriving-compat".flags.template-haskell-2-11 = true;
        "testing-type-modifiers".revision = (((hackage."testing-type-modifiers")."0.1.0.1").revisions).default;
        "cmdargs".revision = (((hackage."cmdargs")."0.10.21").revisions).default;
        "cmdargs".flags.quotation = true;
        "cmdargs".flags.testprog = false;
        "free".revision = (((hackage."free")."5.1.7").revisions).default;
        "pipes".revision = (((hackage."pipes")."4.3.16").revisions).default;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.0.3.0").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.3.5.0").revisions).default;
        "hashable".flags.integer-gmp = true;
        "hashable".flags.random-initial-seed = false;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.6.6").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.mtl = true;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.generic-deriving = true;
        "readable".revision = (((hackage."readable")."0.3.1").revisions).default;
        "statistics-linreg".revision = (((hackage."statistics-linreg")."0.3").revisions).default;
        "semigroups".revision = (((hackage."semigroups")."0.19.2").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.tagged = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.transformers = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "semigroups".flags.hashable = true;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.4").revisions).default;
        "haskell-lexer".revision = (((hackage."haskell-lexer")."1.1").revisions).default;
        "recursion-schemes".revision = (((hackage."recursion-schemes")."5.2.2.2").revisions).default;
        "recursion-schemes".flags.template-haskell = true;
        "websockets".revision = (((hackage."websockets")."0.12.7.3").revisions).default;
        "websockets".flags.example = false;
        "dependent-sum".revision = (((hackage."dependent-sum")."0.7.1.0").revisions).default;
        "x509-store".revision = (((hackage."x509-store")."1.6.7").revisions).default;
        "vault".revision = (((hackage."vault")."0.3.1.5").revisions).default;
        "vault".flags.useghc = true;
        "data-default-instances-old-locale".revision = (((hackage."data-default-instances-old-locale")."0.0.1").revisions).default;
        "optics-core".revision = (((hackage."optics-core")."0.4").revisions).default;
        "optics-core".flags.explicit-generic-labels = false;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1.1").revisions).default;
        "iproute".revision = (((hackage."iproute")."1.7.12").revisions).default;
        "async-timer".revision = (((hackage."async-timer")."0.1.4.1").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "process-extras".revision = (((hackage."process-extras")."0.7.4").revisions).default;
        "microlens".revision = (((hackage."microlens")."0.4.12.0").revisions).default;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.bytestring-builder = false;
        "scientific".flags.integer-simple = false;
        "ghc-heap".revision = (((hackage."ghc-heap")."8.10.5").revisions).default;
        "resourcet".revision = (((hackage."resourcet")."1.2.4.3").revisions).default;
        "binary".revision = (((hackage."binary")."0.8.8.0").revisions).default;
        "ap-normalize".revision = (((hackage."ap-normalize")."0.1.0.1").revisions).default;
        "ap-normalize".flags.test-with-clang = false;
        "wl-pprint-annotated".revision = (((hackage."wl-pprint-annotated")."0.1.0.1").revisions).default;
        "filelock".revision = (((hackage."filelock")."0.1.1.5").revisions).default;
        "pipes-safe".revision = (((hackage."pipes-safe")."2.3.3").revisions).default;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "unix-bytestring".revision = (((hackage."unix-bytestring")."0.3.7.6").revisions).default;
        "canonical-json".revision = (((hackage."canonical-json")."0.6.0.0").revisions).default;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.2").revisions).default;
        "http-client".revision = (((hackage."http-client")."0.7.9").revisions).default;
        "http-client".flags.network-uri = true;
        "digest".revision = (((hackage."digest")."0.0.1.3").revisions).default;
        "digest".flags.bytestring-in-base = false;
        "auto-update".revision = (((hackage."auto-update")."0.1.6").revisions).default;
        "cryptohash-sha1".revision = (((hackage."cryptohash-sha1")."0.11.101.0").revisions).default;
        "cryptohash-md5".revision = (((hackage."cryptohash-md5")."0.11.101.0").revisions).default;
        "io-streams-haproxy".revision = (((hackage."io-streams-haproxy")."1.0.1.0").revisions).default;
        "containers".revision = (((hackage."containers")."0.6.4.1").revisions).default;
        "indexed-profunctors".revision = (((hackage."indexed-profunctors")."0.1.1").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.12").revisions).default;
        "Glob".revision = (((hackage."Glob")."0.10.2").revisions).default;
        "io-streams".revision = (((hackage."io-streams")."1.5.2.1").revisions).default;
        "io-streams".flags.nointeractivetests = false;
        "io-streams".flags.network = true;
        "io-streams".flags.zlib = true;
        "streaming-bytestring".revision = (((hackage."streaming-bytestring")."0.2.1").revisions).default;
        "http-date".revision = (((hackage."http-date")."0.0.11").revisions).default;
        "unix-compat".revision = (((hackage."unix-compat")."0.5.3").revisions).default;
        "unix-compat".flags.old-time = false;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "data-default".revision = (((hackage."data-default")."0.7.1.1").revisions).default;
        "optparse-generic".revision = (((hackage."optparse-generic")."1.4.7").revisions).default;
        "type-equality".revision = (((hackage."type-equality")."1").revisions).default;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.2").revisions).default;
        };
      compiler = {
        version = "8.10.5";
        nix-name = "ghc8105";
        packages = {
          "ghc-boot" = "8.10.5";
          "ghc-boot-th" = "8.10.5";
          "ghc-prim" = "0.6.1";
          "pretty" = "1.1.3.6";
          "text" = "1.2.4.1";
          "base" = "4.14.2.0";
          "time" = "1.9.3";
          "array" = "0.5.4.0";
          "process" = "1.6.9.0";
          "ghc" = "8.10.5";
          "exceptions" = "0.10.4";
          "Cabal" = "3.2.1.0";
          "hpc" = "0.6.1.0";
          "directory" = "1.3.6.0";
          "mtl" = "2.2.2";
          "transformers" = "0.5.6.2";
          "rts" = "1.0.1";
          "parsec" = "3.1.14.0";
          "template-haskell" = "2.16.0.0";
          "bytestring" = "0.10.12.0";
          "ghci" = "8.10.5";
          "deepseq" = "1.4.4.0";
          "unix" = "2.7.2.2";
          "filepath" = "1.4.2.1";
          "stm" = "2.5.0.1";
          "integer-gmp" = "1.0.3.0";
          "terminfo" = "0.4.1.4";
          "ghc-heap" = "8.10.5";
          "binary" = "0.8.8.0";
          "containers" = "0.6.4.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        cardano-node = ./.plan.nix/cardano-node.nix;
        cardano-testnet = ./.plan.nix/cardano-testnet.nix;
        strict-containers = ./.plan.nix/strict-containers.nix;
        cardano-ledger-byron-test = ./.plan.nix/cardano-ledger-byron-test.nix;
        cardano-data = ./.plan.nix/cardano-data.nix;
        plutus-tx = ./.plan.nix/plutus-tx.nix;
        cardano-ledger-byron = ./.plan.nix/cardano-ledger-byron.nix;
        freer-extras = ./.plan.nix/freer-extras.nix;
        tx-generator = ./.plan.nix/tx-generator.nix;
        cardano-prelude = ./.plan.nix/cardano-prelude.nix;
        measures = ./.plan.nix/measures.nix;
        ouroboros-network-testing = ./.plan.nix/ouroboros-network-testing.nix;
        cardano-protocol-tpraos = ./.plan.nix/cardano-protocol-tpraos.nix;
        cardano-node-chairman = ./.plan.nix/cardano-node-chairman.nix;
        cardano-ledger-pretty = ./.plan.nix/cardano-ledger-pretty.nix;
        plutus-core = ./.plan.nix/plutus-core.nix;
        trace-forward = ./.plan.nix/trace-forward.nix;
        plutus-ledger-api = ./.plan.nix/plutus-ledger-api.nix;
        cardano-ledger-shelley-test = ./.plan.nix/cardano-ledger-shelley-test.nix;
        Win32-network = ./.plan.nix/Win32-network.nix;
        iohk-monitoring = ./.plan.nix/iohk-monitoring.nix;
        cardano-prelude-test = ./.plan.nix/cardano-prelude-test.nix;
        lobemo-backend-monitoring = ./.plan.nix/lobemo-backend-monitoring.nix;
        io-sim = ./.plan.nix/io-sim.nix;
        cardano-submit-api = ./.plan.nix/cardano-submit-api.nix;
        cardano-git-rev = ./.plan.nix/cardano-git-rev.nix;
        hedgehog-extras = ./.plan.nix/hedgehog-extras.nix;
        typed-protocols-examples = ./.plan.nix/typed-protocols-examples.nix;
        byron-spec-ledger = ./.plan.nix/byron-spec-ledger.nix;
        cardano-ledger-shelley-ma-test = ./.plan.nix/cardano-ledger-shelley-ma-test.nix;
        ouroboros-consensus = ./.plan.nix/ouroboros-consensus.nix;
        goblins = ./.plan.nix/goblins.nix;
        small-steps-test = ./.plan.nix/small-steps-test.nix;
        cardano-node-capi = ./.plan.nix/cardano-node-capi.nix;
        cardano-api = ./.plan.nix/cardano-api.nix;
        trace-resources = ./.plan.nix/trace-resources.nix;
        contra-tracer = ./.plan.nix/contra-tracer.nix;
        plutus-ledger = ./.plan.nix/plutus-ledger.nix;
        lobemo-scribe-systemd = ./.plan.nix/lobemo-scribe-systemd.nix;
        base-deriving-via = ./.plan.nix/base-deriving-via.nix;
        cardano-crypto-class = ./.plan.nix/cardano-crypto-class.nix;
        monoidal-synchronisation = ./.plan.nix/monoidal-synchronisation.nix;
        cardano-ledger-shelley-ma = ./.plan.nix/cardano-ledger-shelley-ma.nix;
        cardano-ledger-shelley = ./.plan.nix/cardano-ledger-shelley.nix;
        cardano-crypto-tests = ./.plan.nix/cardano-crypto-tests.nix;
        locli = ./.plan.nix/locli.nix;
        cardano-cli = ./.plan.nix/cardano-cli.nix;
        plutus-tx-plugin = ./.plan.nix/plutus-tx-plugin.nix;
        ekg-forward = ./.plan.nix/ekg-forward.nix;
        ouroboros-consensus-cardano = ./.plan.nix/ouroboros-consensus-cardano.nix;
        strict-stm = ./.plan.nix/strict-stm.nix;
        cardano-ledger-alonzo = ./.plan.nix/cardano-ledger-alonzo.nix;
        trace-dispatcher = ./.plan.nix/trace-dispatcher.nix;
        flat = ./.plan.nix/flat.nix;
        cardano-ledger-core = ./.plan.nix/cardano-ledger-core.nix;
        cardano-crypto-praos = ./.plan.nix/cardano-crypto-praos.nix;
        cardano-binary-test = ./.plan.nix/cardano-binary-test.nix;
        cardano-crypto = ./.plan.nix/cardano-crypto.nix;
        lobemo-backend-aggregation = ./.plan.nix/lobemo-backend-aggregation.nix;
        cardano-tracer = ./.plan.nix/cardano-tracer.nix;
        lobemo-backend-trace-forwarder = ./.plan.nix/lobemo-backend-trace-forwarder.nix;
        ouroboros-consensus-byron = ./.plan.nix/ouroboros-consensus-byron.nix;
        typed-protocols-cborg = ./.plan.nix/typed-protocols-cborg.nix;
        optparse-applicative-fork = ./.plan.nix/optparse-applicative-fork.nix;
        cardano-ledger-alonzo-test = ./.plan.nix/cardano-ledger-alonzo-test.nix;
        lobemo-backend-ekg = ./.plan.nix/lobemo-backend-ekg.nix;
        io-classes = ./.plan.nix/io-classes.nix;
        cardano-slotting = ./.plan.nix/cardano-slotting.nix;
        typed-protocols = ./.plan.nix/typed-protocols.nix;
        ouroboros-consensus-protocol = ./.plan.nix/ouroboros-consensus-protocol.nix;
        threepenny-gui = ./.plan.nix/threepenny-gui.nix;
        small-steps = ./.plan.nix/small-steps.nix;
        cardano-crypto-wrapper = ./.plan.nix/cardano-crypto-wrapper.nix;
        network-mux = ./.plan.nix/network-mux.nix;
        plutus-ghc-stub = ./.plan.nix/plutus-ghc-stub.nix;
        compact-map = ./.plan.nix/compact-map.nix;
        ouroboros-network-framework = ./.plan.nix/ouroboros-network-framework.nix;
        tracer-transformers = ./.plan.nix/tracer-transformers.nix;
        cardano-client-demo = ./.plan.nix/cardano-client-demo.nix;
        orphans-deriving-via = ./.plan.nix/orphans-deriving-via.nix;
        word-array = ./.plan.nix/word-array.nix;
        non-integral = ./.plan.nix/non-integral.nix;
        ouroboros-consensus-shelley = ./.plan.nix/ouroboros-consensus-shelley.nix;
        cardano-crypto-test = ./.plan.nix/cardano-crypto-test.nix;
        ouroboros-network = ./.plan.nix/ouroboros-network.nix;
        cardano-binary = ./.plan.nix/cardano-binary.nix;
        cardano-topology = ./.plan.nix/cardano-topology.nix;
        plutus-example = ./.plan.nix/plutus-example.nix;
        set-algebra = ./.plan.nix/set-algebra.nix;
        prettyprinter-configurable = ./.plan.nix/prettyprinter-configurable.nix;
        byron-spec-chain = ./.plan.nix/byron-spec-chain.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "cardano-node" = {
            flags = {
              "unexpected_thunks" = lib.mkOverride 900 false;
              "systemd" = lib.mkOverride 900 true;
              };
            };
          "cardano-testnet" = { flags = {}; };
          "strict-containers" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-ledger-byron-test" = { flags = {}; };
          "cardano-data" = { flags = {}; };
          "plutus-tx" = { flags = {}; };
          "cardano-ledger-byron" = {
            flags = { "test-normal-form" = lib.mkOverride 900 false; };
            };
          "freer-extras" = { flags = {}; };
          "tx-generator" = { flags = {}; };
          "cardano-prelude" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "measures" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "ouroboros-network-testing" = { flags = {}; };
          "cardano-protocol-tpraos" = { flags = {}; };
          "cardano-node-chairman" = { flags = {}; };
          "cardano-ledger-pretty" = { flags = {}; };
          "plutus-core" = { flags = {}; };
          "trace-forward" = { flags = {}; };
          "plutus-ledger-api" = { flags = {}; };
          "cardano-ledger-shelley-test" = { flags = {}; };
          "Win32-network" = { flags = { "demo" = lib.mkOverride 900 false; }; };
          "iohk-monitoring" = {
            flags = {
              "disable-observables" = lib.mkOverride 900 false;
              "performance-test-queue" = lib.mkOverride 900 false;
              };
            };
          "cardano-prelude-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "lobemo-backend-monitoring" = { flags = {}; };
          "io-sim" = { flags = { "asserts" = lib.mkOverride 900 false; }; };
          "cardano-submit-api" = { flags = {}; };
          "cardano-git-rev" = {
            flags = { "systemd" = lib.mkOverride 900 true; };
            };
          "hedgehog-extras" = { flags = {}; };
          "typed-protocols-examples" = { flags = {}; };
          "byron-spec-ledger" = { flags = {}; };
          "cardano-ledger-shelley-ma-test" = { flags = {}; };
          "ouroboros-consensus" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "goblins" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "small-steps-test" = { flags = {}; };
          "cardano-node-capi" = { flags = {}; };
          "cardano-api" = { flags = {}; };
          "trace-resources" = { flags = {}; };
          "contra-tracer" = { flags = {}; };
          "plutus-ledger" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "lobemo-scribe-systemd" = { flags = {}; };
          "base-deriving-via" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-crypto-class" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "monoidal-synchronisation" = { flags = {}; };
          "cardano-ledger-shelley-ma" = { flags = {}; };
          "cardano-ledger-shelley" = { flags = {}; };
          "cardano-crypto-tests" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "locli" = { flags = {}; };
          "cardano-cli" = {
            flags = { "unexpected_thunks" = lib.mkOverride 900 false; };
            };
          "plutus-tx-plugin" = {
            flags = { "use-ghc-stub" = lib.mkOverride 900 false; };
            };
          "ekg-forward" = { flags = {}; };
          "ouroboros-consensus-cardano" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "strict-stm" = {
            flags = {
              "checktvarinvariant" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "cardano-ledger-alonzo" = { flags = {}; };
          "trace-dispatcher" = { flags = {}; };
          "flat" = { flags = {}; };
          "cardano-ledger-core" = { flags = {}; };
          "cardano-crypto-praos" = {
            flags = {
              "development" = lib.mkOverride 900 false;
              "external-libsodium-vrf" = lib.mkOverride 900 true;
              };
            };
          "cardano-binary-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-crypto" = {
            flags = {
              "golden-tests-exe" = lib.mkOverride 900 false;
              "golden-tests" = lib.mkOverride 900 false;
              };
            };
          "lobemo-backend-aggregation" = { flags = {}; };
          "cardano-tracer" = { flags = {}; };
          "lobemo-backend-trace-forwarder" = { flags = {}; };
          "ouroboros-consensus-byron" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "typed-protocols-cborg" = { flags = {}; };
          "optparse-applicative-fork" = {
            flags = { "process" = lib.mkOverride 900 true; };
            };
          "cardano-ledger-alonzo-test" = { flags = {}; };
          "lobemo-backend-ekg" = { flags = {}; };
          "io-classes" = {
            flags = {
              "checktvarinvariant" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "cardano-slotting" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "typed-protocols" = { flags = {}; };
          "ouroboros-consensus-protocol" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "threepenny-gui" = {
            flags = {
              "buildexamples" = lib.mkOverride 900 false;
              "rebug" = lib.mkOverride 900 false;
              };
            };
          "small-steps" = {
            flags = { "sts_assert" = lib.mkOverride 900 false; };
            };
          "cardano-crypto-wrapper" = { flags = {}; };
          "network-mux" = {
            flags = {
              "ipv6" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "plutus-ghc-stub" = { flags = {}; };
          "compact-map" = { flags = {}; };
          "ouroboros-network-framework" = { flags = {}; };
          "tracer-transformers" = { flags = {}; };
          "cardano-client-demo" = { flags = {}; };
          "orphans-deriving-via" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "word-array" = { flags = {}; };
          "non-integral" = { flags = {}; };
          "ouroboros-consensus-shelley" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "cardano-crypto-test" = { flags = {}; };
          "ouroboros-network" = {
            flags = {
              "ipv6" = lib.mkOverride 900 false;
              "cddl" = lib.mkOverride 900 true;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "cardano-binary" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-topology" = { flags = {}; };
          "plutus-example" = {
            flags = { "unexpected_thunks" = lib.mkOverride 900 false; };
            };
          "set-algebra" = { flags = {}; };
          "prettyprinter-configurable" = { flags = {}; };
          "byron-spec-chain" = { flags = {}; };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "tasty-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "string-conversions".components.library.planned = lib.mkOverride 900 true;
          "bytestring-builder".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "tx-generator".components.tests."tx-generator-test".planned = lib.mkOverride 900 true;
          "ouroboros-network".components.sublibs."ouroboros-protocol-tests".planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-containers".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "byron-spec-ledger".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "quiet".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "cardano-node".components.library.planned = lib.mkOverride 900 true;
          "lifted-base".components.library.planned = lib.mkOverride 900 true;
          "lazysmallcheck".components.library.planned = lib.mkOverride 900 true;
          "generic-random".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "http-client-tls".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "setenv".components.library.planned = lib.mkOverride 900 true;
          "criterion-measurement".components.library.planned = lib.mkOverride 900 true;
          "yaml".components.library.planned = lib.mkOverride 900 true;
          "cardano-node".components.tests."cardano-node-test".planned = lib.mkOverride 900 true;
          "data-accessor".components.library.planned = lib.mkOverride 900 true;
          "deriving-aeson".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.exes."tracer-transfomers-example2".planned = lib.mkOverride 900 true;
          "goblins".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus".components.library.planned = lib.mkOverride 900 true;
          "foundation".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-byron".components.library.planned = lib.mkOverride 900 true;
          "cardano-testnet".components.tests."cardano-testnet-tests".planned = lib.mkOverride 900 true;
          "asn1-types".components.library.planned = lib.mkOverride 900 true;
          "hspec-core".components.library.planned = lib.mkOverride 900 true;
          "either".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "cardano-data".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-text".components.library.planned = lib.mkOverride 900 true;
          "lazy-search".components.library.planned = lib.mkOverride 900 true;
          "cardano-tracer".components.exes."cardano-tracer".planned = lib.mkOverride 900 true;
          "statistics-linreg".components.library.planned = lib.mkOverride 900 true;
          "Stream".components.library.planned = lib.mkOverride 900 true;
          "th-orphans".components.library.planned = lib.mkOverride 900 true;
          "freer-extras".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "code-page".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "cardano-submit-api".components.library.planned = lib.mkOverride 900 true;
          "katip".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byron".components.library.planned = lib.mkOverride 900 true;
          "cookie".components.library.planned = lib.mkOverride 900 true;
          "systemd".components.library.planned = lib.mkOverride 900 true;
          "cereal".components.library.planned = lib.mkOverride 900 true;
          "wai-logger".components.setup.planned = lib.mkOverride 900 true;
          "recursion-schemes".components.library.planned = lib.mkOverride 900 true;
          "plutus-example".components.exes."plutus-example".planned = lib.mkOverride 900 true;
          "streaming-binary".components.library.planned = lib.mkOverride 900 true;
          "trace-dispatcher".components.benchmarks."trace-dispatcher-bench".planned = lib.mkOverride 900 true;
          "groups".components.library.planned = lib.mkOverride 900 true;
          "socks".components.library.planned = lib.mkOverride 900 true;
          "regex-posix".components.library.planned = lib.mkOverride 900 true;
          "tx-generator".components.library.planned = lib.mkOverride 900 true;
          "cardano-client-demo".components.exes."stake-credential-history".planned = lib.mkOverride 900 true;
          "threepenny-gui".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "bimap".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.exes."tracer-transfomers-example1".planned = lib.mkOverride 900 true;
          "math-functions".components.library.planned = lib.mkOverride 900 true;
          "async-extras".components.library.planned = lib.mkOverride 900 true;
          "servant".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-wrapper".components.library.planned = lib.mkOverride 900 true;
          "bin".components.library.planned = lib.mkOverride 900 true;
          "cardano-binary-test".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "ekg-forward".components.exes."demo-acceptor".planned = lib.mkOverride 900 true;
          "hedgehog-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "measures".components.library.planned = lib.mkOverride 900 true;
          "hedgehog".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "fmlist".components.library.planned = lib.mkOverride 900 true;
          "trace-resources".components.tests."trace-resources-test".planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "microlens-th".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "barbies".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byron".components.exes."db-converter".planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-old-locale".components.library.planned = lib.mkOverride 900 true;
          "appar".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "th-utilities".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative-fork".components.library.planned = lib.mkOverride 900 true;
          "pem".components.library.planned = lib.mkOverride 900 true;
          "memory".components.library.planned = lib.mkOverride 900 true;
          "tdigest".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-ma-test".components.library.planned = lib.mkOverride 900 true;
          "http2".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "typed-protocols".components.library.planned = lib.mkOverride 900 true;
          "plutus-example".components.exes."create-script-context".planned = lib.mkOverride 900 true;
          "newtype".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-cardano".components.exes."db-analyser".planned = lib.mkOverride 900 true;
          "typed-protocols-cborg".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "newtype-generics".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "zlib-bindings".components.library.planned = lib.mkOverride 900 true;
          "time-units".components.library.planned = lib.mkOverride 900 true;
          "dictionary-sharing".components.library.planned = lib.mkOverride 900 true;
          "vector-th-unbox".components.library.planned = lib.mkOverride 900 true;
          "hspec".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.exes."criterion-report".planned = lib.mkOverride 900 true;
          "cardano-binary".components.library.planned = lib.mkOverride 900 true;
          "libsystemd-journal".components.library.planned = lib.mkOverride 900 true;
          "typerep-map".components.sublibs."typerep-extra-impls".planned = lib.mkOverride 900 true;
          "cardano-cli".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.exes."mux-demo".planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.exes."demo-ping-pong".planned = lib.mkOverride 900 true;
          "ral".components.library.planned = lib.mkOverride 900 true;
          "wai".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "http-date".components.library.planned = lib.mkOverride 900 true;
          "haskell-src-exts".components.library.planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "plutus-example".components.library.planned = lib.mkOverride 900 true;
          "ekg-forward".components.library.planned = lib.mkOverride 900 true;
          "system-filepath".components.library.planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-cardano".components.library.planned = lib.mkOverride 900 true;
          "locli".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "insert-ordered-containers".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.library.planned = lib.mkOverride 900 true;
          "plutus-example".components.tests."plutus-example-test".planned = lib.mkOverride 900 true;
          "dec".components.library.planned = lib.mkOverride 900 true;
          "graphviz".components.library.planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "tf-random".components.library.planned = lib.mkOverride 900 true;
          "optics-extra".components.library.planned = lib.mkOverride 900 true;
          "binary-orphans".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-core".components.library.planned = lib.mkOverride 900 true;
          "streaming".components.library.planned = lib.mkOverride 900 true;
          "monoidal-containers".components.library.planned = lib.mkOverride 900 true;
          "zlib".components.library.planned = lib.mkOverride 900 true;
          "ixset-typed".components.library.planned = lib.mkOverride 900 true;
          "transformers-except".components.library.planned = lib.mkOverride 900 true;
          "cardano-prelude-test".components.library.planned = lib.mkOverride 900 true;
          "libyaml".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-alonzo".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "Unique".components.library.planned = lib.mkOverride 900 true;
          "cardano-api".components.sublibs."gen".planned = lib.mkOverride 900 true;
          "SHA".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "dom-lt".components.library.planned = lib.mkOverride 900 true;
          "freer-simple".components.library.planned = lib.mkOverride 900 true;
          "byteorder".components.library.planned = lib.mkOverride 900 true;
          "fingertree".components.library.planned = lib.mkOverride 900 true;
          "deque".components.library.planned = lib.mkOverride 900 true;
          "servant-server".components.exes."greet".planned = lib.mkOverride 900 true;
          "attoparsec-iso8601".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "blaze-markup".components.library.planned = lib.mkOverride 900 true;
          "witherable".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."index-envs".planned = lib.mkOverride 900 true;
          "cardano-tracer".components.tests."cardano-tracer-test".planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "composition-prelude".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "mwc-random".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-io".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "freer-simple".components.exes."freer-examples".planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."uplc".planned = lib.mkOverride 900 true;
          "cborg".components.library.planned = lib.mkOverride 900 true;
          "tasty-th".components.library.planned = lib.mkOverride 900 true;
          "sop-core".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.setup.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "openapi3".components.exes."example".planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "ekg".components.library.planned = lib.mkOverride 900 true;
          "serialise".components.library.planned = lib.mkOverride 900 true;
          "monad-par".components.library.planned = lib.mkOverride 900 true;
          "system-filepath".components.setup.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "ouroboros-consensus-shelley".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network".components.library.planned = lib.mkOverride 900 true;
          "mtl-compat".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-test".components.library.planned = lib.mkOverride 900 true;
          "erf".components.library.planned = lib.mkOverride 900 true;
          "set-algebra".components.library.planned = lib.mkOverride 900 true;
          "unliftio".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring-type".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "asn1-encoding".components.library.planned = lib.mkOverride 900 true;
          "hsyslog".components.library.planned = lib.mkOverride 900 true;
          "abstract-par".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "tx-generator".components.exes."tx-generator".planned = lib.mkOverride 900 true;
          "alex".components.exes."alex".planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "typed-protocols-examples".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "snap-blaze".components.library.planned = lib.mkOverride 900 true;
          "word8".components.library.planned = lib.mkOverride 900 true;
          "http-client".components.library.planned = lib.mkOverride 900 true;
          "generics-sop".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-byron-test".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "unix-bytestring".components.library.planned = lib.mkOverride 900 true;
          "openapi3".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "microlens-mtl".components.library.planned = lib.mkOverride 900 true;
          "async-timer".components.library.planned = lib.mkOverride 900 true;
          "size-based".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "snap-core".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "abstract-deque".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "optics-core".components.library.planned = lib.mkOverride 900 true;
          "cardano-testnet".components.library.planned = lib.mkOverride 900 true;
          "tasty-hedgehog".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "natural-transformation".components.library.planned = lib.mkOverride 900 true;
          "http-media".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-annotated".components.library.planned = lib.mkOverride 900 true;
          "strict-containers".components.library.planned = lib.mkOverride 900 true;
          "time-manager".components.library.planned = lib.mkOverride 900 true;
          "iproute".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "websockets-snap".components.library.planned = lib.mkOverride 900 true;
          "generic-monoid".components.library.planned = lib.mkOverride 900 true;
          "js-chart".components.library.planned = lib.mkOverride 900 true;
          "lobemo-backend-trace-forwarder".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-instances".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.library.planned = lib.mkOverride 900 true;
          "small-steps-test".components.library.planned = lib.mkOverride 900 true;
          "cardano-tracer".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum-template".components.library.planned = lib.mkOverride 900 true;
          "generic-data".components.library.planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "mersenne-random-pure64".components.library.planned = lib.mkOverride 900 true;
          "plutus-ghc-stub".components.library.planned = lib.mkOverride 900 true;
          "small-steps".components.library.planned = lib.mkOverride 900 true;
          "cardano-testnet".components.exes."cardano-testnet".planned = lib.mkOverride 900 true;
          "wai-logger".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "atomic-primops".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx-plugin".components.exes."profile".planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto".components.library.planned = lib.mkOverride 900 true;
          "cardano-client-demo".components.exes."chain-sync-client-with-ledger-state".planned = lib.mkOverride 900 true;
          "http-types".components.library.planned = lib.mkOverride 900 true;
          "x509".components.library.planned = lib.mkOverride 900 true;
          "gray-code".components.library.planned = lib.mkOverride 900 true;
          "cardano-cli".components.tests."cardano-cli-golden".planned = lib.mkOverride 900 true;
          "tls".components.library.planned = lib.mkOverride 900 true;
          "typerep-map".components.library.planned = lib.mkOverride 900 true;
          "ap-normalize".components.library.planned = lib.mkOverride 900 true;
          "Histogram".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "lobemo-backend-ekg".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-alonzo-test".components.library.planned = lib.mkOverride 900 true;
          "x509-validation".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "pipes-safe".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "canonical-json".components.library.planned = lib.mkOverride 900 true;
          "cardano-submit-api".components.tests."unit".planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.library.planned = lib.mkOverride 900 true;
          "th-extras".components.library.planned = lib.mkOverride 900 true;
          "charset".components.library.planned = lib.mkOverride 900 true;
          "process-extras".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "wai-extra".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-class".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "trace-dispatcher".components.tests."trace-dispatcher-test".planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "io-classes".components.library.planned = lib.mkOverride 900 true;
          "monoidal-synchronisation".components.library.planned = lib.mkOverride 900 true;
          "filelock".components.library.planned = lib.mkOverride 900 true;
          "compact-map".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.library.planned = lib.mkOverride 900 true;
          "openapi3".components.setup.planned = lib.mkOverride 900 true;
          "blaze-html".components.library.planned = lib.mkOverride 900 true;
          "cardano-client-demo".components.exes."scan-blocks".planned = lib.mkOverride 900 true;
          "file-embed".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.exes."warp".planned = lib.mkOverride 900 true;
          "hspec-discover".components.exes."hspec-discover".planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "singleton-bool".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "optics-th".components.library.planned = lib.mkOverride 900 true;
          "simple-sendfile".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "io-sim".components.library.planned = lib.mkOverride 900 true;
          "pipes".components.library.planned = lib.mkOverride 900 true;
          "uniplate".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "moo".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "cardano-tracer".components.exes."demo-forwarder".planned = lib.mkOverride 900 true;
          "cardano-ledger-pretty".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."pir".planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "fgl".components.library.planned = lib.mkOverride 900 true;
          "cardano-protocol-tpraos".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-dlist".components.library.planned = lib.mkOverride 900 true;
          "bech32".components.exes."bech32".planned = lib.mkOverride 900 true;
          "trace-forward".components.library.planned = lib.mkOverride 900 true;
          "dense-linear-algebra".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "nothunks".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-tests".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx-plugin".components.library.planned = lib.mkOverride 900 true;
          "cardano-submit-api".components.exes."cardano-submit-api".planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "trace-dispatcher".components.library.planned = lib.mkOverride 900 true;
          "cryptonite".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.library.planned = lib.mkOverride 900 true;
          "monad-par-extras".components.library.planned = lib.mkOverride 900 true;
          "servant-server".components.library.planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "parsers".components.library.planned = lib.mkOverride 900 true;
          "random-shuffle".components.library.planned = lib.mkOverride 900 true;
          "regex-base".components.library.planned = lib.mkOverride 900 true;
          "Win32-network".components.library.planned = lib.mkOverride 900 true;
          "statistics".components.library.planned = lib.mkOverride 900 true;
          "cardano-api".components.tests."cardano-api-test".planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "lobemo-backend-monitoring".components.library.planned = lib.mkOverride 900 true;
          "tree-diff".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "iohk-monitoring".components.library.planned = lib.mkOverride 900 true;
          "cassava".components.library.planned = lib.mkOverride 900 true;
          "vault".components.library.planned = lib.mkOverride 900 true;
          "unagi-chan".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "asn1-parse".components.library.planned = lib.mkOverride 900 true;
          "vector-binary-instances".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "trace-forward".components.tests."test".planned = lib.mkOverride 900 true;
          "flat".components.library.planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "cardano-cli".components.tests."cardano-cli-test".planned = lib.mkOverride 900 true;
          "protolude".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-test".components.library.planned = lib.mkOverride 900 true;
          "ekg-json".components.library.planned = lib.mkOverride 900 true;
          "locli".components.exes."locli".planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "prometheus".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "cardano-node-chairman".components.exes."cardano-node-chairman".planned = lib.mkOverride 900 true;
          "concurrent-output".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network".components.exes."demo-chain-sync".planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "cardano-client-demo".components.exes."ledger-state".planned = lib.mkOverride 900 true;
          "cardano-crypto-praos".components.library.planned = lib.mkOverride 900 true;
          "gnuplot".components.library.planned = lib.mkOverride 900 true;
          "network-byte-order".components.library.planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "mime-types".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.exes."demo-connection-manager".planned = lib.mkOverride 900 true;
          "word-array".components.library.planned = lib.mkOverride 900 true;
          "safecopy".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "cardano-node-chairman".components.tests."chairman-tests".planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "network-info".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "Diff".components.library.planned = lib.mkOverride 900 true;
          "cardano-prelude".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-protocol".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "lifted-async".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "ListLike".components.library.planned = lib.mkOverride 900 true;
          "microstache".components.library.planned = lib.mkOverride 900 true;
          "bsb-http-chunked".components.library.planned = lib.mkOverride 900 true;
          "conduit".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "http-api-data".components.library.planned = lib.mkOverride 900 true;
          "uuid".components.library.planned = lib.mkOverride 900 true;
          "MonadRandom".components.library.planned = lib.mkOverride 900 true;
          "trace-dispatcher".components.exes."trace-dispatcher-examples".planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "hedgehog-corpus".components.library.planned = lib.mkOverride 900 true;
          "reducers".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "psqueues".components.library.planned = lib.mkOverride 900 true;
          "network".components.library.planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "cardano-slotting".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "show-combinators".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-testing".components.library.planned = lib.mkOverride 900 true;
          "partial-order".components.library.planned = lib.mkOverride 900 true;
          "formatting".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.setup.planned = lib.mkOverride 900 true;
          "lobemo-scribe-systemd".components.library.planned = lib.mkOverride 900 true;
          "deriving-compat".components.library.planned = lib.mkOverride 900 true;
          "fast-logger".components.library.planned = lib.mkOverride 900 true;
          "data-default".components.library.planned = lib.mkOverride 900 true;
          "SafeSemaphore".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "strict-stm".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger".components.library.planned = lib.mkOverride 900 true;
          "ekg-forward".components.exes."demo-forwarder".planned = lib.mkOverride 900 true;
          "streaming-commons".components.library.planned = lib.mkOverride 900 true;
          "cmdargs".components.library.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "dns".components.library.planned = lib.mkOverride 900 true;
          "optparse-generic".components.library.planned = lib.mkOverride 900 true;
          "io-streams-haproxy".components.library.planned = lib.mkOverride 900 true;
          "cardano-tracer".components.benchmarks."cardano-tracer-bench".planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-md5".components.library.planned = lib.mkOverride 900 true;
          "trace-resources".components.library.planned = lib.mkOverride 900 true;
          "digest".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "streaming-bytestring".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.exes."aeson-pretty".planned = lib.mkOverride 900 true;
          "cardano-api".components.library.planned = lib.mkOverride 900 true;
          "cardano-node-capi".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."plc".planned = lib.mkOverride 900 true;
          "io-streams".components.library.planned = lib.mkOverride 900 true;
          "polyparse".components.library.planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "cardano-topology".components.exes."cardano-topology".planned = lib.mkOverride 900 true;
          "fin".components.library.planned = lib.mkOverride 900 true;
          "cardano-node".components.exes."cardano-node".planned = lib.mkOverride 900 true;
          "contra-tracer".components.library.planned = lib.mkOverride 900 true;
          "Glob".components.library.planned = lib.mkOverride 900 true;
          "base-deriving-via".components.library.planned = lib.mkOverride 900 true;
          "utility-ht".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.exes."cardano-ping".planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "basement".components.library.planned = lib.mkOverride 900 true;
          "hourglass".components.library.planned = lib.mkOverride 900 true;
          "orphans-deriving-via".components.library.planned = lib.mkOverride 900 true;
          "tasty-expected-failure".components.library.planned = lib.mkOverride 900 true;
          "snap-server".components.library.planned = lib.mkOverride 900 true;
          "bech32".components.library.planned = lib.mkOverride 900 true;
          "x509-system".components.library.planned = lib.mkOverride 900 true;
          "th-reify-many".components.library.planned = lib.mkOverride 900 true;
          "th-expand-syns".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "half".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "string-conv".components.library.planned = lib.mkOverride 900 true;
          "data-accessor-transformers".components.library.planned = lib.mkOverride 900 true;
          "hostname".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "cardano-client-demo".components.exes."scan-blocks-pipelined".planned = lib.mkOverride 900 true;
          "unix-time".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-ma".components.library.planned = lib.mkOverride 900 true;
          "ekg-core".components.library.planned = lib.mkOverride 900 true;
          "strict-list".components.library.planned = lib.mkOverride 900 true;
          "base58-bytestring".components.library.planned = lib.mkOverride 900 true;
          "cardano-git-rev".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "readable".components.library.planned = lib.mkOverride 900 true;
          "generic-deriving".components.library.planned = lib.mkOverride 900 true;
          "auto-update".components.library.planned = lib.mkOverride 900 true;
          "byron-spec-chain".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring".components.library.planned = lib.mkOverride 900 true;
          "warp".components.library.planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "lobemo-backend-aggregation".components.library.planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "connection".components.library.planned = lib.mkOverride 900 true;
          "websockets".components.library.planned = lib.mkOverride 900 true;
          "x509-store".components.library.planned = lib.mkOverride 900 true;
          "Win32-network".components.exes."named-pipe-demo".planned = lib.mkOverride 900 true;
          "hedgehog-extras".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "indexed-profunctors".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "easy-file".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-sha1".components.library.planned = lib.mkOverride 900 true;
          "cardano-tracer".components.sublibs."demo-forwarder-lib".planned = lib.mkOverride 900 true;
          "cardano-cli".components.exes."cardano-cli".planned = lib.mkOverride 900 true;
          "non-integral".components.library.planned = lib.mkOverride 900 true;
          "testing-type-modifiers".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }